{"version":3,"sources":["services/history.js","services/User.js","config.js","services/Validator.js","pages/Login/index.js","pages/Register/index.js","pages/Dashboard/index.js","services/LocalStorage.js","routes/Route.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","User","email","name","this","config","baseUrl","callAuthenticate","state","xhr","XMLHttpRequest","open","setRequestHeader","send","user","pass","status","responseText","register","storage","repass","match","authCode","callRegister","newUser","setUser","LoginBox","props","React","Component","Login","error","changeUser","bind","changePass","handleRegister","handleSubmit","event","setState","target","value","preventDefault","push","validated","data","JSON","parse","results","authenticate","errorMessage","className","id","onSubmit","type","required","placeholder","onChange","href","onClick","withRouter","RegisterBox","changeName","changeRepass","handleLogin","registered","Dashboard","handleLogout","clear","getUser","LocalStorage","ls","undefined","RouteWrapper","isPrivate","rest","isSigned","to","Routes","path","exact","render","Register","defaultProps","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.678d44b8.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\nexport default history;\n","export class User {\n    constructor(email, name) {\n        this.email = email;\n        this.name = name;\n    }\n}\n","const config = {\n  baseUrl: \"http://localhost:5000/api\",\n};\nexport default config;\n","import {User} from \"./User\";\nimport config from \"../config\";\n\nfunction callAuthenticate(state) {\n  let xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", `${config.baseUrl}/login`, false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"email=\"+state.user+\"&password=\"+state.pass);\n  return [xhr.status, xhr.responseText];\n}\n\nfunction callRegister(state) {\n  let xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", `${config.baseUrl}/register`, false);\n  xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhr.send(\"name=\"+state.name+\"&email=\"+state.user+\"&password=\"+state.pass);\n  return xhr.status;\n}\n\nexport function authenticate(state, storage) {\n    if (state.user !== \"\" && state.pass !== \"\") {\n        let authCode = callAuthenticate(state);\n        if (authCode[0] !== 200) {\n          if (authCode[0] === 204 || authCode[0] === 205) {\n            return [false, 'Invalid email or password']\n          } else {\n            return [false, 'Error has occured']\n          }\n        }\n        let data = JSON.parse(authCode[1]);\n        if (authCode[0] === 200) {\n          let newUser = new User(state.user, data.results);\n          storage.setUser(newUser);\n          return [true];\n        }\n    } else {\n        return [false, 'Please fill in all fields'];\n    }\n}\n\nexport function register(state, storage) {\n    let emailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,24})+$/;\n    let passFormat = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n\n    if (state.pass !== state.repass) {\n      return [false, 'Passwords do not match']\n    } else if (!state.user.match(emailFormat)) {\n        return [false, `${state.user} is not a valid email address`]\n    } else if (!state.pass.match(passFormat)){\n        return [false, 'Passwords must be at least 8 characters long; contain at least 1 lower case letter [a-z]; at least 1 upper case letter [A-Z]; at least 1 number [0-9]']\n    } else if (state.name !== \"\" && state.user !== \"\" && state.pass !== \"\" && state.repass !== \"\"){\n        let authCode = callAuthenticate(state);\n        if (authCode[0] === 200 || authCode[0] === 204) {\n          return [false, `An account already exists for ${state.name}`]\n        } else if (authCode[0] === 205) {\n            let registerCode = callRegister(state);\n            if (registerCode === 200) {\n              let newUser = new User(state.user, state.name);\n              storage.setUser(newUser);\n              return [true];\n            } else {\n                  return [false, 'Error has occurred']\n            }\n        } else {\n           return [false, 'Error has occurred']\n        }\n    } else {\n        return [false, 'Please fill in all fields']\n    }\n}\n","import React from 'react';\nimport '../../webapp.css';\nimport {withRouter} from \"react-router-dom\";\nimport {authenticate} from \"../../services/Validator\";\n\nexport class LoginBox extends React.Component {\n    render() {\n        return (\n            <Login history = {this.props.history} storage = {this.props.storage}/>\n        );\n    }\n}\n\nexport class Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {user:'', pass:'', error:'loginError'};\n\n        this.changeUser = this.changeUser.bind(this);\n        this.changePass = this.changePass.bind(this);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    changeUser(event) {\n        this.setState({user: event.target.value});\n    }\n\n    changePass(event) {\n        this.setState({pass: event.target.value});\n    }\n\n    handleRegister(event) {\n        event.preventDefault();\n        this.props.history.push('/register');\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let validated = authenticate(this.state, this.props.storage);\n        if (validated[0]) {\n    \t\t\tthis.props.history.push('/dashboard');\n    \t\t} else {\n            this.setState({error: 'loginError'});\n            this.setState({errorMessage: validated[1]});\n        }\n    }\n\n    render () {\n        return (\n            <div className=\"container\" id=\"container\">\n              <div className=\"form-container\">\n                <form onSubmit={this.handleSubmit}>\n                  <h1>Sign in</h1>\n                  <input type='text' required placeholder='Email'\n                        value={this.state.user} onChange={ this.changeUser} />\n                  <input type='password'required placeholder='Password'\n                        value ={this.state.pass} onChange={this.changePass} />\n                  <a href=\"#\">Forgot your password?</a>\n                  <button>Sign In</button>\n                  <div className='error' id={this.state.error}>\n                            {this.state.errorMessage}\n                  </div>\n                </form>\n              </div>\n              <div className=\"overlay-container-right\">\n                <h1>Hi There!</h1>\n                <p>Don't have an account with us yet? Register now!</p>\n                <button onClick={this.handleRegister} className=\"ghost\" id=\"signUp\">Sign Up </button>\n              </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(LoginBox);\n","import React from 'react';\nimport '../../webapp.css';\nimport {withRouter} from \"react-router-dom\"\nimport {register} from \"../../services/Validator\";\n\nclass RegisterBox extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {name: '', user:'', pass:'', repass:'', error:'registerError'};\n\n\t\tthis.changeName = this.changeName.bind(this);\n\t\tthis.changeUser = this.changeUser.bind(this);\n\t\tthis.changePass = this.changePass.bind(this);\n\t\tthis.changeRepass = this.changeRepass.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tchangeName(event) {\n\t\t\tthis.setState({name: event.target.value});\n\t}\n\n\tchangeUser(event) {\n\t\t\tthis.setState({user: event.target.value});\n\t}\n\n\tchangePass(event) {\n\t\t\tthis.setState({pass: event.target.value});\n\t}\n\n\tchangeRepass(event) {\n\t\t\tthis.setState({repass: event.target.value});\n\t}\n\n  handleLogin(event) {\n      event.preventDefault();\n      this.props.history.push('/login');\n  }\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tlet registered = register(this.state, this.props.storage);\n\t\tif (registered[0]) {\n\t\t\tthis.props.history.push('/dashboard');\n\t\t} else {\n\t\t\tthis.setState({error: 'RegisterError'});\n\t\t\tthis.setState({errorMessage: registered[1]});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n      <div className=\"container\" id=\"container\">\n        <div className=\"form-container-right\">\n          <form onSubmit={this.handleSubmit}>\n            <h1>Create Account</h1>\n            <input type='text' required placeholder='Full Name'\n                   value ={this.state.name} onChange={this.changeName}/>\n            <input type='text' required placeholder='Email'\n                   value={this.state.user} onChange={ this.changeUser}/>\n            <input type='password' required placeholder='Password'\n                   value ={this.state.pass} onChange={this.changePass}/>\n            <input type='password' required placeholder='Re-Enter Password'\n                   value ={this.state.repass} onChange={this.changeRepass}/>\n            <button>Sign Up</button>\n            <div className='error' id={this.state.error}>\n                      {this.state.errorMessage}\n            </div>\n          </form>\n        </div>\n        <div className=\"overlay-container-left\">\n          <h1>Welcome Back!</h1>\n          <p>Oh, already have an account with us? Sign in below!</p>\n          <button onClick={this.handleLogin} className=\"ghost\" id=\"signIn\">Sign In</button>\n        </div>\n      </div>\n\t\t);\n\t}\n}\n\nexport default withRouter(RegisterBox);\n","import React from 'react';\nimport '../../webapp.css';\nimport {withRouter} from \"react-router-dom\"\n\nclass Dashboard extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n    this.handleLogout = this.handleLogout.bind(this);\n\t}\n\n  handleLogout(event) {\n        event.preventDefault();\n        this.props.storage.clear();\n        this.props.history.push(\"/\");\n  }\n\n\trender() {\n\t\treturn (\n      <div className=\"container\" id=\"container\">\n        <button onClick={this.handleLogout}> Logout </button>\n        <h1> Welcome {this.props.storage.getUser().name} </h1>\n      </div>\n\t\t);\n\t}\n}\n\nexport default withRouter(Dashboard);\n","import ls from 'local-storage';\nimport {User} from \"./User\";\nimport React from \"react\";\n\nexport class LocalStorage {\n    constructor() {\n        if (ls('curUser') === null)\n            ls('curUser', undefined);\n        if (ls('signed') === null)\n            ls('signed', false);\n    }\n\n    setUser(newUser) {\n        if (newUser instanceof User) {\n            ls('curUser', newUser);\n            ls('signed', true);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    getUser() {\n        return ls('curUser');\n    }\n\n    clear() {\n        ls('curUser', undefined);\n        ls('signed', false);\n    }\n\n    isSigned() {\n        return ls('signed');\n    }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport {LocalStorage} from \"../services/LocalStorage\";\n\nexport default function RouteWrapper({\n    isPrivate,\n    storage,\n    ...rest\n    }) {\n\n    if (isPrivate && !storage.isSigned()) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return <Route {...rest} />;\n}\n\nRouteWrapper.propTypes = {\n    isPrivate: PropTypes.bool,\n    storage: PropTypes.instanceOf(LocalStorage).isRequired\n};\n\nRouteWrapper.defaultProps = {\n    isPrivate: false\n};\n","import React from \"react\";\nimport { BrowserRouter, Switch} from \"react-router-dom\";\nimport Login from '../pages/Login';\nimport Register from '../pages/Register';\nimport Dashboard from '../pages/Dashboard';\nimport Route from './Route'\nimport {LocalStorage} from '../services/LocalStorage'\n\nexport default function Routes() {\n    let storage = new LocalStorage();\n    return (\n      <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" exact\n                   render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\n                   storage={storage}\n            />\n            <Route path=\"/register\"\n                   render = {(props) =><Register{...props} history = {Routes.history} storage = {storage}/>}\n                   storage={storage}\n            />\n            <Route path=\"/dashboard\"\n                   render = {(props) =><Dashboard{...props} history = {Routes.history} storage = {storage}/>}\n                   isPrivate = {true} storage={storage}\n            />\n            {/* redirect user to Login page if route does not exist and user is not authenticated */}\n            <Route\n                render = {(props) =><Login{...props} history = {Routes.history} storage = {storage}/>}\n                storage={storage}\n            />\n        </Switch>\n       </BrowserRouter>\n    );\n}\n","import React from 'react';\nimport { Router } from 'react-router';\n\nimport history from './services/history';\nimport Routes from './routes';\n\nfunction App() {\n    return (\n        <Router history={history}>\n            <Routes  />\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}